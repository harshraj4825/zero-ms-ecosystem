server:
  port: 8081
spring:
  application:
    name: USER-SERVICE
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
    instances:
      productServiceCB:
        slidingWindowSize: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
  retry:
    instances:
      productServiceRetry:
        max-attempts: 3
        wait-duration: 1s
        retryExceptions:
          - >-
            org.springframework.web.reactive.function.client.WebClientRequestException
          - >-
            org.springframework.web.reactive.function.client.WebClientResponseException
          - java.util.concurrent.TimeoutException
          - java.io.IOException

logging:
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'

management:
  tracing:
    exporter:
      zipkin:
        enabled: true
    sampling:
      probability: 1.0
    enable: true
  zipkin:
    tracing:
      endpoint: http://192.168.144.61:9411/api/v2/spans
  endpoints:
    web:
      exposure:
        include: "*"
  metrics:
    export:
      prometheus:
        enabled: true
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always
eureka:
  client:
    service-url:
      defaultZone: 'http://localhost:8761/eureka'
    instance:
      preferIpAddress: true